spring.application.name=backend
server.port=8081

# Datasource - use environment variables for production-safe configuration
# Example DB_URL: jdbc:mysql://localhost:3306/lmsdb?useSSL=false&serverTimezone=UTC
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# JWT settings (provide via environment variable APP_JWT_SECRET)
jwt.secret=${APP_JWT_SECRET:verySecretJwtKeyReplaceThisWithEnvVar}
jwt.expiration=${APP_JWT_EXPIRATION_MS:86400000}

# Mail settings (optional - provide real SMTP creds via env vars)
spring.mail.host=${SPRING_MAIL_HOST:smtp.example.com}
spring.mail.port=${SPRING_MAIL_PORT:587}
spring.mail.username=${SPRING_MAIL_USERNAME:your-email@example.com}
spring.mail.password=${SPRING_MAIL_PASSWORD:your-email-password}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_STARTTLS:true}

# H2 console disabled by default for MySQL usage; enable only for development if needed
spring.h2.console.enabled=false
# enable JDBC session store (if not already)
spring.session.store-type=jdbc

# force initialization of session schema on startup (useful for dev)
spring.session.jdbc.initialize-schema=always